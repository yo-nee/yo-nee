# Exercise 1 Stacks
  class Stack
    def initialize
      @array = []
    end

    def push(ele)
        @array.push(ele)
        # adds an element to the stack
    end

    def pop
        @array.pop(ele)
      # removes one element from the stack
    end

    def peek
        @array.last(ele)
      # returns, but doesn't remove, the top element in the stack
    end
  end
  
  #Exercise 2 - Queue
  Class Queue
    def initialize
        @array = []
    end
    
    def enqueue(el)
        array = []
        array.push(ele)
    end

    def dequeue
        array.shift

    def peek
        array.first
    end

    #Exercise 3 - Map

    def initialize
        @array =[]
    end

    def set(key, value)
        idx_pair = array.index { |pair| pair[0] == key }
        if idx_pair
            array[idx_pair][1] = value
        else
            array.push([key, value])
        end
        value
    end

    def get(key)
        array.each do |pair| 
            return pair[1] if pair[0] == key 
        end

        nil
    end

    def delete(key)
        val = get(key)
        array.reject! { |pair| pair[0] == key }
        val
    end

    #def show
    
    #end


    
